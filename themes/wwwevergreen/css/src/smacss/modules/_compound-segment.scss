/**
 * H. Compound Segment
 *
 * A common pattern wherein copy is tightly coupled to an icon.
 *
 * This used to be called the Media Segment, but there were conflicts with
 * Drupal’s Media module, so that term has been deprecated. I never really
 * liked “media” for this kind of segment, anyway. —jkm
 *
 * Table of Contents
 *
 * 1. Default
 * 2. Alternate
 * 3. Icon
 * 4. Spacing
 * 5. Vertically-Centered
 * 6. Column And Squishy
 * 7. SVG Images
 */
/**
 * 1. Default
 *
 * .compound
 * +------------+ +---------------------+
 * |            | |                     |
 * | .compound- | | .compound-body      |
 * |  img       | |                     |
 * |            | |                     |
 * +------------+ |                     |
 *                |                     |
 *                +---------------------+
 */
.media,  // deprecated, conflicts with Drupal Media module
.compound{
	display: flex;
	flex-direction: row;
}

.media-img,  // deprecated
.media-img:link,  // deprecated
.compound-img,
.compound-img:link{
	// box model
	margin-bottom: calc(15 / 16 * 1rem);
	padding-right: 2ch;
	max-width: 33.3333333333%;
	// layout
	flex-shrink: 0;  // Do not allow the image to shrink. Note: this does respect the max-width property.

	@include breakpoint($gamora){
		padding-right: 0.882352941176471em;  // 15px
	}
}

.media-img img,  // deprecated
.compound-img img{
	margin-top: 0.46875rem;  // Align the .compound-body content with the .compound-img content.
	display: block;
}

// Extends .media-img img(?)
.media-img-icon,  // deprecated
// Extends .compound-img img(?)
.compound-img-icon{
	max-height: 3.75rem;

.compound-img-icon img,  // deprecated, use .compound-img__icon class on icon itself
.compound-img__icon{
	// box model
	width: calc(45 / 16 * 1rem);
	max-width: 100%;
	// layout
	display: block;
}

}

.media-body,  // deprecated
.compound-body{
	// layout
	flex: 1 1 auto;
}

.media-body > :first-child,  // deprecated
.compound-body > :first-child{
	margin-top: 0.46875rem;  // Align the .compound-body content with the .compound-img content.
}

/**
 * 2. Alternate
 *
 * Put .compound-img on the right. Extends .compound
 *
 * .compound.compound-alt
 * +---------------------+ +------------+
 * |                     | |            |
 * | .compound-body      | | .compound- |
 * |                     | |  img       |
 * |                     | |            |
 * |                     | +------------+
 * |                     |
 * +---------------------+
 */

.media-alt,  // deprecated
.compound-alt{
	flex-direction: row-reverse;
}

.media-alt > .media-img,  // deprecated
.compound-alt > .compound-img{
	padding-right: 0;
	padding-left: 2ch;
}

/**
 * 3. Icon
 *
 * Better spacing and sizing for icons that are roughly the same size as
 * the font size. (This might work for slightly larger icons, as well, but
 * I haven’t tested it yet.
 *
 * .compound.compound--icon
 * +---+ +---------------------+
 * | X | |                     |
 * +---+ | .compound-body      |
 *  ^    |                     |
 *  ^    |                     |
 *  ^    |                     |
 *  ^    +---------------------+
 *  .compound-img
 */
.compound--icon{
	align-items: baseline;
}

.compound--icon > .compound-img{
	padding-right: 1ch;
}

.compound--icon__icon{
	width: 1em;  // If needed, create modifier classes that pre-set icon sizes as appropriate (e.g. .compound-img--icon-small)
}

/**
 * 4. Spacing
 *
 * Separate compounds with extra spacing. Extends .compound
 */
.compound-space-l{
	margin: calc(30 / 16 * 1rem) auto;
}

.compound-space-l .compound-img{
	padding-right: 4ch;
}

.compound-space-l.compound-alt .compound-img{
	padding-right: 0;
	padding-left: 4ch;
}

/**
 * 5. Vertically-Centered
 * 
 * Vertically center .compound-child-alt with the rest of the compound.
 * Extends .compound-img or .compound-body.
 *
 * .compound
 *                    +---------------------+
 *                    |                     |
 * +----------------+ |                     |
 * |                | | .compound-body      |
 * | .compound-     | |                     |
 * |  img.compound- | |                     |
 * |  child-alt     | |                     |
 * |                | |                     |
 * +----------------+ |                     |
 *                    |                     |
 *                    +---------------------+
 *
 * OR
 *
 * .compound
 * +-------------+
 * |             |
 * |             | +--------------------------+
 * | .compound-  | |                          |
 * |  img        | | .compound-body.compound- |
 * |             | |  child-alt               |
 * |             | |                          |
 * |             | +--------------------------+
 * |             |
 * +-------------+
 */

.media-img-alt,  // deprecated, use .compound-child-alt instead
.media-child-alt,  // deprecated, use .compound-child-alt instead
.compound-child-alt{
	align-self: center;
}

/**
 * 6. Column And Squishy
 *
 * .compound-column puts .compound-img on the top. Extends .compound.
 *
 * .compound-squishy puts .compound-img on top, then moves it to the side
 * (as above) as screen width increases. Extends .compound.
 *
 * .compound.compound-column or .compound.compound-squishy
 *    +---------------+
 *    |               |
 *    | .compound-img |
 *    |               |
 *    |               |
 *    |               |
 *    +---------------+
 * +---------------------+
 * |                     |
 * | .compound-body      |
 * |                     |
 * |                     |
 * |                     |
 * |                     |
 * |                     |
 * +---------------------+
 */

.media-column,  // deprecated
.media-squishy,  // deprecated, Put .media-img on top, then move to the side
.compound-column,
.compound-squishy{  // Put .compound-img on top, then move to the side
	align-items: stretch;
	flex-direction: column;
}

.media-squishy,  //deprecated
.compound-squishy{

	@include breakpoint($starlord){
		align-items: stretch;
		flex-direction: row;
	}
}

.media-column > .media-img,  // deprecated
.media-squishy > .media-img,  // deprecated
.compound-column > .compound-img,
.compound-squishy > .compound-img{
	padding-right: 0;
	max-width: 100%;
	text-align: center;
}

.media-squishy > .media-img, // deprecated
.compound-squishy > .compound-img{

	@include breakpoint($starlord){
		margin-bottom: calc(30 / 16 * 1rem);
		padding-right: 2ch;
		max-width: 33.3333333333%;
		// layout
		flex-shrink: 0;  // Do not allow the image to shrink. Note: this does respect the max-width property.
	}
}

.media-column > .media-img img,  // deprecated
.media-squishy > .media-img img,  // deprecated
.compound-column > .compound-img img,
.compound-sqishy > .compound-img img{
	margin: 0 auto;
}

/**
 * 7. SVG Images
 *
 * SVGs are tricky because they don’t come with intrinsic dimensions and
 * therefore lack flexibility.
 *
 * These styles make sure they size up to the maximum available width of
 * the .compound-img container.
 */
.compound-img-full{
	// box model
	width: 100%;  // for .compound-column with SVG inside (see /about --> 1,000 for example)
	// layout
	flex-basis: 100%;
}