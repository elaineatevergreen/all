<?php
/**
 * @file
 * field_group_dl.module
 *
 * Defines a field group display formatter that is a link.
 */

/**
 * Implements hook_field_group_formatter_info().
 *
 * Define the field group link display formatter.
 */
function field_group_dl_field_group_formatter_info() {
  return array(
    'display' => array(
      'dl' => array(
        'label' => t('Definition List'),
        'description' => t('This fieldgroup renders the inner content in a definition list with the title as legend.'),
        'format_types' => array('open'),
        'default_formatter' => 'open',
        'instance_settings' => array('show_label' => 1, 'label_element' => 'h3', 'classes' => '', 'id' => ''),
      ),
    ),
  );
}

/**
 * Implements hook_field_group_format_settings().
 *
 * @params Object $group The group object.
 * @return Array $form The form element for the format settings.
 */
function field_group_dl_field_group_format_settings($group) {

  // Add optional instance_settings.
  switch ($group->format_type) {
    case 'dl':
		$form['instance_settings']['show_label'] = array(
        '#title' => t('Show label'),
        '#type' => 'select',
        '#options' => array(0 => t('No'), 1 => t('Yes')),
        '#default_value' => isset($group->format_settings['instance_settings']['show_label']) ? $group->format_settings['instance_settings']['show_label'] : $formatter['instance_settings']['show_label'],
        '#weight' => 2,
      );
      $form['instance_settings']['label_element'] = array(
        '#title' => t('Label element'),
        '#type' => 'select',
        '#options' => array('h2' => t('Header 2'), 'h3' => t('Header 3')),
        '#default_value' => isset($group->format_settings['instance_settings']['label_element']) ? $group->format_settings['instance_settings']['label_element'] : $formatter['instance_settings']['label_element'],
        '#weight' => 2,
      );
       if (isset($formatter['instance_settings']['id'])) {
    $form['instance_settings']['id'] = array(
      '#title' => t('ID'),
      '#type' => 'textfield',
      '#default_value' => isset($group->format_settings['instance_settings']['id']) ? $group->format_settings['instance_settings']['id'] : (isset($formatter['instance_settings']['id']) ? $formatter['instance_settings']['id'] : ''),
      '#weight' => 10,
      '#element_validate' => array('field_group_validate_id'),
    );
  }
  if (isset($formatter['instance_settings']['classes'])) {
    $form['instance_settings']['classes'] = array(
      '#title' => t('Extra CSS classes'),
      '#type' => 'textfield',
      '#default_value' => isset($group->format_settings['instance_settings']['classes']) ? $group->format_settings['instance_settings']['classes'] : (isset($formatter['instance_settings']['classes']) ? $formatter['instance_settings']['classes'] : ''),
      '#weight' => 11,
      '#element_validate' => array('field_group_validate_css_class'),
    );
  }
      break;
  }

  return $form;
}



/**
 * Implements hook_field_group_pre_render().
 * 
 * @param Array $elements by address.
 * @param Object $group The Field group info.
 */
function field_group_dl_field_group_pre_render(&$element, $group, &$form) {

$show_label = isset($group->format_settings['instance_settings']['show_label']) ? $group->format_settings['instance_settings']['show_label'] : 0;
  $label_element = isset($group->format_settings['instance_settings']['label_element']) ? $group->format_settings['instance_settings']['label_element'] : 'h2';
  $effect = isset($group->format_settings['instance_settings']['effect']) ? $group->format_settings['instance_settings']['effect'] : 'none';

  $element['#type'] = 'markup';
  $id = isset($element['#id']) ? ' id="' . $element['#id'] . '"' : '';



    $element['#prefix'] = '<div' . $id . ' class="' . $group->classes . '">
      <' . $label_element . '>' . check_plain(t($group->label)) . '</' . $label_element . '>
      <dl class="field-group-format-wrapper">';
    $element['#suffix'] = '</dl></div>';

}
