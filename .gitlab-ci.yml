stages:
  - build
  - deploy


deploy_collab:
  stage: deploy
  script:
    - chmod uog+x bin/*
    - sudo -EHu banner bin/ci_deploy_collab.sh
  tags:
    - collab
  only:
    - master
deploy_www:
  stage: deploy
  script:
    - chmod uog+x bin/*
    - sudo -EHu www_deploy bin/ci_deploy_www.sh
  tags:
    - www
  only:
    - master
deploy_collabtest:
  stage: deploy
  script:
    - chmod uog+x bin/*
    - sudo -EHu banner bin/ci_deploy_collab.sh
  tags:
    - collabtest
  only:
    - test
deploy_wwwtest:
  stage: deploy
  script:
    - chmod uog+x bin/*
    - sudo -EHu www_deploy bin/ci_deploy_www.sh
  tags:
    - wwwtest
  only:
    - test
deploy_collabdev:
  stage: deploy
  script:
    - chmod uog+x bin/*
    - sudo -EHu banner bin/ci_deploy_collab.sh
  tags:
    - collabdev
  only:
    - dev
deploy_wwwdev:
  stage: deploy
  script:
    - chmod uog+x bin/*
    - sudo -EHu www_deploy bin/ci_deploy_www.sh
  tags:
    - wwwdev
  only:
    - dev

build:
  stage: build
  image:
    name: registry.git.evergreen.edu/web-team/docker-images/sassdevbuild
  artifacts:
    paths:
       - themes/wwwevergreen/css/dist
       - themes/wwwevergreen/js/dist
  only:
    - /^munge.*$/
    - /dev/
    - test
    - master
  script:
    - echo "Building the app"
    - cd themes/wwwevergreen/
    #- npm install grunt-cli
    - npm install grunt
    #- npm install ajv
    #- npm install grunt-postcss
    #- npm install autoprefixer
    #- npm install postcss-reporter
    #- npm install grunt-contrib-concat
    #- npm install grunt-contrib-copy
    #- npm install grunt-contrib-imagemin
    #- npm install grunt-contrib-jshint
    #- npm install grunt-contrib-sass
    #- npm install grunt-contrib-uglify
    #- npm install grunt-contrib-watch
    #- npm install grunt-imageoptim
    #- npm install grunt-newer
    #- npm install grunt-perfbudget
    #- npm install grunt-svgstore
    #- npm install
    - export LC_ALL=en_US.UTF-8
    - export LANG=en_US.UTF-8
    - grunt
  tags:
    - scss-docker

